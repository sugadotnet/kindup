@model APPBASE.Models.SkhVM
@using APPBASE.Helpers

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    <div class="col-sm-12">
        @{Html.RenderPartial("_Inputs_config");}
    </div> <!-- /.col-sm-12 -->
</div><!-- /.row -->
<hr />
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["ACTIVITY0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ACTIVITY">Kegiatan</label>
            <textarea id="ACTIVITY" name="DETAIL.ACTIVITY" class="form-control" maxlength="200" @vsReadonlyTextbox>@Html.DisplayFor(model => model.DETAIL.ACTIVITY)</textarea>


            @if (ViewData.ModelState["ACTIVITY1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ACTIVITY1")
                    </label>
            }
            @if (ViewData.ModelState["ACTIVITY2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ACTIVITY2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["INDICATOR0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="INDICATOR">Indikator</label>
            <input type="text" id="INDICATOR" name="DETAIL.INDICATOR" value="@Html.DisplayFor(model => model.DETAIL.INDICATOR)" class="form-control VARCHAR" maxlength = "50" @vsReadonlyTextbox />

            @if (ViewData.ModelState["INDICATOR1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("INDICATOR1")
                    </label>
            }
            @if (ViewData.ModelState["INDICATOR2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("INDICATOR2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["MEDIA0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="MEDIA">Media</label>
            <input type="text" id="MEDIA" name="DETAIL.MEDIA" value="@Html.DisplayFor(model => model.DETAIL.MEDIA)" class="form-control VARCHAR" maxlength = "50" @vsReadonlyTextbox />

            @if (ViewData.ModelState["MEDIA1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("MEDIA1")
                    </label>
            }
            @if (ViewData.ModelState["MEDIA2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("MEDIA2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
