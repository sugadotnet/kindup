@model APPBASE.Models.StudentVM
@using APPBASE.Helpers
@using APPBASE.Svcbiz

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    <div class="col-sm-12 col-md-6">
        @if (ViewData.ModelState["FILTER_BRANCH_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="FILTER_BRANCH_ID">Cabang/Pusat</label>
                <select id="FILTER_BRANCH_ID" name="FILTER_BRANCH_ID" class="form-control select2" data-placeholder="Select Cabang/Pusat" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @if (ViewBag.BRANCHALL != null)
                    {
                        foreach (var item in ViewBag.BRANCHALL)
                        {

                            if (Model.FILTER_BRANCH_ID == item.ID)
                            {<option selected value="@item.ID">@item.BRANCH_DESC</option> }
                            else
                            {<option value="@item.ID">@item.BRANCH_DESC</option> }
                        }
                    }
                </select>

            @if (ViewData.ModelState["FILTER_BRANCH_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("FILTER_BRANCH_ID1")
                    </label>
            }
            @if (ViewData.ModelState["FILTER_BRANCH_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("FILTER_BRANCH_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 col-md-6 -->

    <div class="col-sm-12 col-md-6">
        @if (ViewData.ModelState["FILTER_CLASSTYPE_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="FILTER_CLASSTYPE_ID">Kelas</label>
                <select id="FILTER_CLASSTYPE_ID" name="FILTER_CLASSTYPE_ID" class="form-control select2" data-placeholder="Select Kelas" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @if (ViewBag.CLASSTYPE != null)
                    {
                        foreach (var item in ViewBag.CLASSTYPE)
                        {

                            if (Model.FILTER_CLASSTYPE_ID == item.ID)
                            {<option selected value="@item.ID">@item.CLASSTYPE_NAME</option> }
                            else
                            {<option value="@item.ID">@item.CLASSTYPE_NAME</option> }
                        }
                    }
                </select>

            @if (ViewData.ModelState["FILTER_CLASSTYPE_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("FILTER_CLASSTYPE_ID1")
                    </label>
            }
            @if (ViewData.ModelState["FILTER_CLASSTYPE_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("FILTER_CLASSTYPE_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 col-md-6 -->
</div><!-- /.row -->

