@model APPBASE.Models.Transaction_indetailVM
@using APPBASE.Helpers

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

@if (ViewData.ModelState["TRN_AMOUNT0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
<div class="form-group @vsErrClass">
    <label for="TRN_AMOUNT">Jumlah Pembayaran</label>
    <input type="hidden" id="TRN_AMOUNT" name="TRN_AMOUNT" value="@Html.DisplayFor(model => model.TRN_AMOUNT)" class="form-control data-mask-decimal"  @vsReadonlyTextbox />
    <input type="text" id="TRN_AMOUNT_S" name="TRN_AMOUNT_S" value="@Html.DisplayFor(model => model.TRN_AMOUNT)" class="form-control data-mask-decimal" style="text-align:right;"  @vsReadonlyTextbox />

    @if (ViewData.ModelState["TRN_AMOUNT1"] != null)
    {
            <label class="control-label" for="inputError">
            <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("TRN_AMOUNT1")
            </label>
    }
    @if (ViewData.ModelState["TRN_AMOUNT2"] != null)
    {
            <label class="control-label" for="inputError">
            <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("TRN_AMOUNT2")
            </label>
    }
</div> <!-- /.form-group -->


@if (ViewData.ModelState["TRN_DESC0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
<div class="form-group @vsErrClass">
    <label for="TRN_DESC">Uraian</label>
    <input type="text" id="TRN_DESC" name="TRN_DESC" value="@Html.DisplayFor(model => model.TRN_DESC)" class="form-control" maxlength = "100" @vsReadonlyTextbox />

    @if (ViewData.ModelState["TRN_DESC1"] != null)
    {
            <label class="control-label" for="inputError">
            <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("TRN_DESC1")
            </label>
    }
    @if (ViewData.ModelState["TRN_DESC2"] != null)
    {
            <label class="control-label" for="inputError">
            <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("TRN_DESC2")
            </label>
    }
</div> <!-- /.form-group -->
